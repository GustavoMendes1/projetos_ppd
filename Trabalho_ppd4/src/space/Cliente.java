package space;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.jms.Connection;
import javax.jms.ConnectionFactory;
import javax.jms.Destination;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.Session;
import javax.jms.TextMessage;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JScrollPane;
import net.jini.space.JavaSpace;

/**
 *
 * @author Gustavo Mendes
 */
public class Cliente extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    
   
     ArrayList<String> sensoresDispo = new ArrayList<>();
    int cont=0;
    DefaultListModel listMonitorados = new DefaultListModel();
    public Cliente() throws JMSException {
        initComponents();
        initList();
        setSize(650, 600);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nome = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        notificacao = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        iniciar = new javax.swing.JButton();
        titulo = new javax.swing.JLabel();
        listSensores = new javax.swing.JScrollPane();
        sensoresDisponiveis = new javax.swing.JList<>();
        sensoresMonitorados2 = new javax.swing.JScrollPane();
        monitoramento = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(nome, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 560, 30));

        jLabel1.setText("Nome:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        jLabel2.setText("Sensores diponíveis:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        jLabel3.setText("Sensores monitorados:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, -1, -1));

        addBtn.setText("Adicionar");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        getContentPane().add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 180, 90, 40));

        notificacao.setColumns(20);
        notificacao.setRows(5);
        jScrollPane3.setViewportView(notificacao);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 560, 120));

        jLabel4.setText("Notificações:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, -1, -1));

        iniciar.setBackground(new java.awt.Color(0, 156, 59));
        iniciar.setText("Iniciar monitoramento");
        iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarActionPerformed(evt);
            }
        });
        getContentPane().add(iniciar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 560, 40));

        titulo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, -1, -1));

        listSensores.setViewportView(sensoresDisponiveis);

        getContentPane().add(listSensores, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 200, 160));

        sensoresMonitorados2.setViewportView(monitoramento);

        getContentPane().add(sensoresMonitorados2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, 190, 160));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        String sensor = sensoresDisponiveis.getSelectedValue().toString();
        listMonitorados.addElement(sensor);
        monitoramento.setModel(listMonitorados);
        
    }//GEN-LAST:event_addBtnActionPerformed

    private void iniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarActionPerformed
        notificacao.append("Carregando..."+"\n");
        notificacao.setCaretPosition(notificacao.getText().length());
        titulo.setText(nome.getText());
        nome.setEnabled(false);
        iniciar.setEnabled(false);
        addBtn.setEnabled(false);
        ReadMessage read;
        for(int i=0;i<listMonitorados.size();i++){
           if(listMonitorados.get(i)!=null){
               read = new ReadMessage((String) listMonitorados.get(i));
           }
        }
        
         
    }//GEN-LAST:event_iniciarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Cliente().setVisible(true);
                } catch (JMSException ex) {
                    Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton iniciar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane listSensores;
    private javax.swing.JList<String> monitoramento;
    private javax.swing.JTextField nome;
    private javax.swing.JTextArea notificacao;
    private javax.swing.JList<String> sensoresDisponiveis;
    private javax.swing.JScrollPane sensoresMonitorados2;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables
private void initList() throws JMSException {
        DefaultListModel list = new DefaultListModel();
        ReadSensor r = new ReadSensor();
        r.readMessage("","sensor");
        for(int i=0;i<sensoresDispo.size();i++){
            if(sensoresDispo.get(i)!=null){
                list.addElement(sensoresDispo.get(i));
            }
        }
        sensoresDisponiveis.setModel(list);
        notificacao.setEditable(false);
        
    }
    
    public class ReadSensor {

    public void readMessage(String name, String message) {
        try {
            System.out.println("Procurando pelo servico JavaSpace...");
            Lookup finder = new Lookup(JavaSpace.class);
            JavaSpace space = (JavaSpace) finder.getService();
            if (space == null) {
                    System.out.println("O servico JavaSpace nao foi encontrado. Encerrando...");
                    System.exit(-1);
            } 
            System.out.println("O servico JavaSpace foi encontrado.");
	    System.out.println(space);

            
            space.Message template = new space.Message();
         
            template.content = message; 
            
            while(true){
                space.Message msg = (space.Message) space.take(template, null, 60 * 10);
                
                if (msg == null) {
                    System.out.println("Tempo de espera esgotado. Encerrando...");
                    break;
                }else{
                    System.out.println("Mensagem recebida: "+ msg.content + msg.name);
                    sensoresDispo.add(msg.name);
                }
            }
            
        sendMessage();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    public void sendMessage( ) {
        try {
            System.out.println("Procurando pelo servico JavaSpace...");
            Lookup finder = new Lookup(JavaSpace.class);
            JavaSpace space = (JavaSpace) finder.getService();
            if (space == null) {
                    System.out.println("O servico JavaSpace nao foi encontrado. Encerrando...");
                    System.exit(-1);
            } 
            System.out.println("O servico JavaSpace foi encontrado.");
            System.out.println(space);
            for(int i=0;i<sensoresDispo.size();i++){
                space.Message msg = new space.Message();
                System.out.println("Cadastrando sensor");
                msg.content = "sensor";
                msg.name = sensoresDispo.get(i);
                space.write(msg, null, 60 * 100000);
            }
            
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
    public class ReadMessage implements  Runnable{
        
        String name = "";

        public ReadMessage(String name) {
            this.name = name;
            new Thread(this, name).start();
            
        }

        public void run(){

            try {
                System.out.println("Procurando pelo servico JavaSpace...");
                Lookup finder = new Lookup(JavaSpace.class);
                JavaSpace space = (JavaSpace) finder.getService();
                if (space == null) {
                        System.out.println("O servico JavaSpace nao foi encontrado. Encerrando...");
                        System.exit(-1);
                } 
                System.out.println("O servico JavaSpace foi encontrado.");
                System.out.println(space);

            
            space.Message template = new space.Message();
            template.name = name+"Notification";
            notificacao.append("O monitoramento foi iniciado: "+name+"\n");
            notificacao.setCaretPosition(notificacao.getText().length());
            while(true){
                space.Message msg = (space.Message) space.take(template, null, 60 * 100000);
                if (msg == null) {
                    System.out.println("Tempo de espera esgotado. Encerrando...");
                    break;
                }else{
                    notificacao.append(msg.content+"\n");
                    notificacao.setCaretPosition(notificacao.getText().length());
                    System.out.println("Mensagem recebida: "+ msg.content + msg.name);
                }
            }
 
        } catch (Exception e) {
            e.printStackTrace();
        }     
        }      
    }
}
